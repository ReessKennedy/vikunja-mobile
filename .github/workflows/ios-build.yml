name: iOS Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'  # Use modern Flutter with Dart 3.3.0+
        channel: stable
        cache: false  # Disable cache to avoid conflicts
        
    - name: Update Flutter version constraint
      run: |
        # Update pubspec.yaml to use modern Flutter
        sed -i '' 's/flutter: ">=3.16.0"/flutter: ">=3.22.0"/' pubspec.yaml
        
    - name: Restore modern dependencies
      run: |
        # Restore modern package versions
        sed -i '' 's/http: \^1.2.0/http: ^1.2.1/' pubspec.yaml
        sed -i '' 's/intl: \^0.18.1.*/intl: ^0.20.2/' pubspec.yaml
        
    - name: Flutter doctor
      run: flutter doctor -v
        
    - name: Clean everything
      run: |
        flutter clean
        rm -rf ~/.pub-cache
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf ios/.symlinks
        rm -rf ios/Flutter/Flutter.framework
        rm -rf ios/Flutter/Flutter.podspec
        
    - name: Install dependencies
      run: |
        flutter pub get
        flutter pub deps
        
    - name: Clean and prepare iOS dependencies  
      run: |
        cd ios
        pod cache clean --all
        pod repo remove trunk || true
        pod setup
        
    - name: Try installing with different CocoaPods strategies
      run: |
        cd ios
        echo "Trying pod install with repo update..."
        pod install --repo-update --verbose || {
          echo "Failed. Trying without repo update..."
          pod install --verbose || {
            echo "Failed. Trying with --allow-root..."
            pod install --allow-root --verbose || {
              echo "Failed. Trying legacy resolver..."
              pod install --verbose --deployment || {
                echo "All strategies failed. Showing detailed error info..."
                pod --version
                pod repo list
                cat Podfile
                exit 1
              }
            }
          }
        }
        
    - name: Build iOS (without code signing)
      run: |
        flutter build ios --release --no-codesign --verbose
        
    - name: Create unsigned IPA
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r app-unsigned.ipa Payload/
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-unsigned-ipa
        path: build/ios/iphoneos/app-unsigned.ipa
        retention-days: 30
        
    - name: Build info
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± Download the unsigned IPA from the Actions artifacts"
        echo "‚ÑπÔ∏è  To install: You'll need to sign this IPA with your Apple ID using tools like:"
        echo "   - Xcode (if you have it)"
        echo "   - AltStore"
        echo "   - Sideloadly"
        echo "   - Or set up proper code signing in this workflow" 